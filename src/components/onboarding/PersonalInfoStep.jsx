import React, { useState, useEffect } from "react";
import { motion } from "framer-motion";
import AnimatedDropdown from "../AnimatedDropdown";

const PersonalInfoStep = ({ data = {}, updateData }) => {
  const [formData, setFormData] = useState({
    name: data.name || "",
    gender: data.gender || null,
    age: data.age || null,
    ...data,
  });

  useEffect(() => {
    updateData(formData);
  }, [formData, updateData]);

  const handleInputChange = (field, value) => {
    setFormData((prev) => ({ ...prev, [field]: value }));
  };

  const genderOptions = [
    {
      value: "male",
      label: "–ú—É–∂—Å–∫–æ–π",
      icon: "üë®",
      description: "–ú—É–∂—á–∏–Ω–∞",
    },
    {
      value: "female",
      label: "–ñ–µ–Ω—Å–∫–∏–π",
      icon: "üë©",
      description: "–ñ–µ–Ω—â–∏–Ω–∞",
    },
  ];

  const ageRanges = [
    {
      group: "–ú–æ–ª–æ–¥–æ—Å—Ç—å",
      items: [
        {
          value: "18-25",
          label: "18-25 –ª–µ—Ç",
          icon: "üå±",
          description: "–ê–∫—Ç–∏–≤–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç",
        },
        {
          value: "26-35",
          label: "26-35 –ª–µ—Ç",
          icon: "üí™",
          description: "–ó—Ä–µ–ª–æ—Å—Ç—å –∏ —ç–Ω–µ—Ä–≥–∏—è",
        },
      ],
    },
    {
      group: "–ó—Ä–µ–ª–æ—Å—Ç—å",
      items: [
        {
          value: "36-45",
          label: "36-45 –ª–µ—Ç",
          icon: "‚≠ê",
          description: "–û–ø—ã—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç",
        },
        {
          value: "46-55",
          label: "46-55 –ª–µ—Ç",
          icon: "üåü",
          description: "–ú—É–¥—Ä–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å",
        },
      ],
    },
    {
      group: "–ú—É–¥—Ä–æ—Å—Ç—å",
      items: [
        {
          value: "56-65",
          label: "56-65 –ª–µ—Ç",
          icon: "üéñÔ∏è",
          description: "–ó–æ–ª–æ—Ç–æ–π –≤–æ–∑—Ä–∞—Å—Ç",
        },
        {
          value: "65+",
          label: "65+ –ª–µ—Ç",
          icon: "üëë",
          description: "–ü–æ—á–µ—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç",
        },
      ],
    },
  ];

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };

  const itemVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: {
      opacity: 1,
      y: 0,
      transition: {
        type: "spring",
        stiffness: 400,
        damping: 25,
      },
    },
  };

  return (
    <motion.div
      style={{
        display: "flex",
        flexDirection: "column",
        gap: "24px",
        maxWidth: "500px",
        margin: "0 auto",
      }}
      variants={containerVariants}
      initial="hidden"
      animate="visible"
    >
      {/* –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ */}
      <motion.div
        style={{ textAlign: "center", marginBottom: "16px" }}
        variants={itemVariants}
      >
        <h3
          style={{
            fontSize: "28px",
            margin: "0 0 8px",
            color: "var(--text-color)",
            fontWeight: "700",
          }}
        >
          –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ üëã
        </h3>
        <p
          style={{
            fontSize: "16px",
            color: "var(--secondary-text-color)",
            margin: 0,
            lineHeight: "1.5",
          }}
        >
          –≠—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –æ–ø—ã—Ç
        </p>
      </motion.div>

      {/* –ü–æ–ª–µ –∏–º–µ–Ω–∏ */}
      <motion.div variants={itemVariants}>
        <label
          style={{
            display: "block",
            marginBottom: "8px",
            fontSize: "16px",
            fontWeight: "600",
            color: "var(--text-color)",
          }}
        >
          –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç? üìù
        </label>
        <motion.input
          type="text"
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
          value={formData.name}
          onChange={(e) => handleInputChange("name", e.target.value)}
          style={{
            width: "100%",
            padding: "16px 20px",
            borderRadius: "16px",
            border: "2px solid var(--border-color)",
            background: "rgba(255, 255, 255, 0.05)",
            backdropFilter: "blur(10px)",
            color: "var(--text-color)",
            fontSize: "16px",
            outline: "none",
            transition: "all 0.3s ease",
            boxSizing: "border-box",
          }}
          whileFocus={{
            borderColor: "var(--primary-color)",
            boxShadow: "0 0 0 3px rgba(0, 122, 255, 0.1)",
            transform: "translateY(-1px)",
          }}
        />
      </motion.div>

      {/* –í—ã–±–æ—Ä –ø–æ–ª–∞ */}
      <motion.div variants={itemVariants}>
        <label
          style={{
            display: "block",
            marginBottom: "8px",
            fontSize: "16px",
            fontWeight: "600",
            color: "var(--text-color)",
          }}
        >
          –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª üë§
        </label>
        <AnimatedDropdown
          options={genderOptions}
          value={formData.gender}
          onChange={(value) => handleInputChange("gender", value)}
          placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª"
          icon="üë§"
        />
      </motion.div>

      {/* –í—ã–±–æ—Ä –≤–æ–∑—Ä–∞—Å—Ç–∞ */}
      <motion.div variants={itemVariants}>
        <label
          style={{
            display: "block",
            marginBottom: "8px",
            fontSize: "16px",
            fontWeight: "600",
            color: "var(--text-color)",
          }}
        >
          –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É üéÇ
        </label>
        <AnimatedDropdown
          options={ageRanges}
          value={formData.age}
          onChange={(value) => handleInputChange("age", value)}
          placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É"
          icon="üéÇ"
          searchable={false}
        />
      </motion.div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
      {formData.name && formData.gender && formData.age && (
        <motion.div
          style={{
            background: "rgba(0, 122, 255, 0.1)",
            border: "1px solid rgba(0, 122, 255, 0.2)",
            borderRadius: "16px",
            padding: "20px",
            textAlign: "center",
            marginTop: "16px",
          }}
          initial={{ opacity: 0, scale: 0.9 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{
            type: "spring",
            stiffness: 400,
            damping: 25,
            delay: 0.2,
          }}
        >
          <motion.div
            style={{ fontSize: "24px", marginBottom: "8px" }}
            animate={{ rotate: [0, 10, -10, 0] }}
            transition={{ duration: 2, repeat: Infinity, ease: "easeInOut" }}
          >
            üëã
          </motion.div>
          <p
            style={{
              fontSize: "16px",
              color: "var(--text-color)",
              margin: "0 0 4px",
              fontWeight: "600",
            }}
          >
            –ü—Ä–∏–≤–µ—Ç, {formData.name}!
          </p>
          <p
            style={{
              fontSize: "14px",
              color: "var(--secondary-text-color)",
              margin: 0,
            }}
          >
            –†–∞–¥—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É! –î–∞–≤–∞–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è.
          </p>
        </motion.div>
      )}

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è */}
      <motion.div
        style={{
          display: "flex",
          justifyContent: "center",
          gap: "8px",
          marginTop: "16px",
        }}
        variants={itemVariants}
      >
        {[formData.name, formData.gender, formData.age].map((field, index) => (
          <motion.div
            key={index}
            style={{
              width: "12px",
              height: "12px",
              borderRadius: "50%",
              backgroundColor: field
                ? "var(--primary-color)"
                : "rgba(255, 255, 255, 0.2)",
              transition: "all 0.3s ease",
            }}
            animate={{
              scale: field ? [1, 1.2, 1] : 1,
              boxShadow: field ? "0 0 8px rgba(0, 122, 255, 0.5)" : "none",
            }}
            transition={{
              scale: { duration: 0.6, repeat: Infinity, ease: "easeInOut" },
              backgroundColor: { duration: 0.3 },
            }}
          />
        ))}
      </motion.div>
    </motion.div>
  );
};

export default PersonalInfoStep;
