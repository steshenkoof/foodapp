import React, { useState } from "react";
import "../styles/Settings.css";

const Settings = ({
  userProfile,
  isSubscribed,
  onProfileUpdate,
  onSubscribe,
  onReset,
  onNavigate,
}) => {
  const [isEditing, setIsEditing] = useState(false);
  const [editedProfile, setEditedProfile] = useState({ ...userProfile });

  const handleSave = () => {
    onProfileUpdate(editedProfile);
    setIsEditing(false);
  };

  const handleCancel = () => {
    setEditedProfile({ ...userProfile });
    setIsEditing(false);
  };

  const handleSubscribe = () => {
    // –°–∏–º—É–ª—è—Ü–∏—è –æ–ø–ª–∞—Ç—ã —á–µ—Ä–µ–∑ Telegram Payments
    if (window.Telegram?.WebApp?.showPopup) {
      window.Telegram.WebApp.showPopup(
        {
          title: "Cal AI Premium",
          message:
            "–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–µ, –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫—É –∏ –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∑–∞ 299‚ÇΩ/–º–µ—Å—è—Ü",
          buttons: [
            { id: "subscribe", type: "default", text: "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è" },
            { id: "cancel", type: "cancel", text: "–û—Ç–º–µ–Ω–∞" },
          ],
        },
        (buttonId) => {
          if (buttonId === "subscribe") {
            onSubscribe();
            window.Telegram.WebApp.showAlert("–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞! üéâ");
          }
        }
      );
    } else {
      onSubscribe();
    }
  };

  const calculateBMI = (weight, height) => {
    const heightInMeters = height / 100;
    return weight / (heightInMeters * heightInMeters);
  };

  const getBMICategory = (bmi) => {
    if (bmi < 18.5) return { text: "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –≤–µ—Å", color: "#007aff" };
    if (bmi < 25) return { text: "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –≤–µ—Å", color: "#34c759" };
    if (bmi < 30) return { text: "–ò–∑–±—ã—Ç–æ—á–Ω—ã–π –≤–µ—Å", color: "#ff9500" };
    return { text: "–û–∂–∏—Ä–µ–Ω–∏–µ", color: "#ff3b30" };
  };

  const bmi = calculateBMI(userProfile.weight, userProfile.height);
  const bmiCategory = getBMICategory(bmi);

  return (
    <div className="settings">
      <div className="settings__header">
        <h1 className="settings__title">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h1>
      </div>

      {/* –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <div className="settings__section">
        <div className="section-header">
          <h2>üë§ –ü—Ä–æ—Ñ–∏–ª—å</h2>
          {!isEditing && (
            <button className="edit-btn" onClick={() => setIsEditing(true)}>
              –ò–∑–º–µ–Ω–∏—Ç—å
            </button>
          )}
        </div>

        <div className="profile-card">
          {isEditing ? (
            <div className="profile-form">
              <div className="form-group">
                <label>–ü–æ–ª</label>
                <div className="radio-group">
                  <label className="radio-label">
                    <input
                      type="radio"
                      value="male"
                      checked={editedProfile.gender === "male"}
                      onChange={(e) =>
                        setEditedProfile({
                          ...editedProfile,
                          gender: e.target.value,
                        })
                      }
                    />
                    –ú—É–∂—Å–∫–æ–π
                  </label>
                  <label className="radio-label">
                    <input
                      type="radio"
                      value="female"
                      checked={editedProfile.gender === "female"}
                      onChange={(e) =>
                        setEditedProfile({
                          ...editedProfile,
                          gender: e.target.value,
                        })
                      }
                    />
                    –ñ–µ–Ω—Å–∫–∏–π
                  </label>
                </div>
              </div>

              <div className="form-row">
                <div className="form-group">
                  <label>–í–æ–∑—Ä–∞—Å—Ç</label>
                  <input
                    type="number"
                    value={editedProfile.age}
                    onChange={(e) =>
                      setEditedProfile({
                        ...editedProfile,
                        age: parseInt(e.target.value),
                      })
                    }
                    min="1"
                    max="120"
                  />
                </div>
                <div className="form-group">
                  <label>–†–æ—Å—Ç (—Å–º)</label>
                  <input
                    type="number"
                    value={editedProfile.height}
                    onChange={(e) =>
                      setEditedProfile({
                        ...editedProfile,
                        height: parseInt(e.target.value),
                      })
                    }
                    min="100"
                    max="250"
                  />
                </div>
              </div>

              <div className="form-group">
                <label>–í–µ—Å (–∫–≥)</label>
                <input
                  type="number"
                  value={editedProfile.weight}
                  onChange={(e) =>
                    setEditedProfile({
                      ...editedProfile,
                      weight: parseInt(e.target.value),
                    })
                  }
                  min="30"
                  max="300"
                />
              </div>

              <div className="form-group">
                <label>–£—Ä–æ–≤–µ–Ω—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</label>
                <select
                  value={editedProfile.activity}
                  onChange={(e) =>
                    setEditedProfile({
                      ...editedProfile,
                      activity: e.target.value,
                    })
                  }
                >
                  <option value="sedentary">–ú–∞–ª–æ–ø–æ–¥–≤–∏–∂–Ω—ã–π</option>
                  <option value="light">–õ–µ–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
                  <option value="moderate">–£–º–µ—Ä–µ–Ω–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
                  <option value="active">–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
                  <option value="very_active">–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</option>
                </select>
              </div>

              <div className="form-group">
                <label>–¶–µ–ª—å</label>
                <select
                  value={editedProfile.goal}
                  onChange={(e) =>
                    setEditedProfile({ ...editedProfile, goal: e.target.value })
                  }
                >
                  <option value="lose">–ü–æ—Ö—É–¥–µ–Ω–∏–µ</option>
                  <option value="maintain">–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞</option>
                  <option value="gain">–ù–∞–±–æ—Ä –º–∞—Å—Å—ã</option>
                </select>
              </div>

              <div className="form-actions">
                <button className="save-btn" onClick={handleSave}>
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </button>
                <button className="cancel-btn" onClick={handleCancel}>
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          ) : (
            <div className="profile-info">
              <div className="profile-stats">
                <div className="stat-item">
                  <span className="stat-label">–ü–æ–ª</span>
                  <span className="stat-value">
                    {userProfile.gender === "male" ? "–ú—É–∂—Å–∫–æ–π" : "–ñ–µ–Ω—Å–∫–∏–π"}
                  </span>
                </div>
                <div className="stat-item">
                  <span className="stat-label">–í–æ–∑—Ä–∞—Å—Ç</span>
                  <span className="stat-value">{userProfile.age} –ª–µ—Ç</span>
                </div>
                <div className="stat-item">
                  <span className="stat-label">–†–æ—Å—Ç</span>
                  <span className="stat-value">{userProfile.height} —Å–º</span>
                </div>
                <div className="stat-item">
                  <span className="stat-label">–í–µ—Å</span>
                  <span className="stat-value">{userProfile.weight} –∫–≥</span>
                </div>
              </div>

              <div className="bmi-info">
                <div className="bmi-value">
                  <span className="bmi-number">{bmi.toFixed(1)}</span>
                  <span className="bmi-label">–ò–ú–¢</span>
                </div>
                <div
                  className="bmi-category"
                  style={{ color: bmiCategory.color }}
                >
                  {bmiCategory.text}
                </div>
              </div>
            </div>
          )}
        </div>
      </div>

      {/* –ü–æ–¥–ø–∏—Å–∫–∞ */}
      <div className="settings__section">
        <h2>üíé –ü–æ–¥–ø–∏—Å–∫–∞</h2>

        {isSubscribed ? (
          <div className="subscription-active">
            <div className="subscription-status">
              <span className="status-icon">‚úÖ</span>
              <div className="status-text">
                <h3>Cal AI Premium –∞–∫—Ç–∏–≤–Ω–∞</h3>
                <p>–£ –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º</p>
              </div>
            </div>

            <div className="premium-features">
              <div className="feature-item">
                <span className="feature-icon">ü§ñ</span>
                <span>–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">üìä</span>
                <span>–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">üìà</span>
                <span>–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç—á–µ—Ç—ã</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">‚òÅÔ∏è</span>
                <span>–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</span>
              </div>
            </div>
          </div>
        ) : (
          <div className="subscription-offer">
            <div className="offer-header">
              <h3>–ü–æ–ª—É—á–∏—Ç–µ –±–æ–ª—å—à–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π</h3>
              <div className="price">
                299‚ÇΩ<span className="price-period">/–º–µ—Å—è—Ü</span>
              </div>
            </div>

            <div className="offer-features">
              <div className="feature-item">
                <span className="feature-icon">ü§ñ</span>
                <span>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">üìä</span>
                <span>–î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–∏—Ç–∞–Ω–∏—è</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">üìà</span>
                <span>–ì—Ä–∞—Ñ–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç—ã</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">üéØ</span>
                <span>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</span>
              </div>
              <div className="feature-item">
                <span className="feature-icon">‚òÅÔ∏è</span>
                <span>–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</span>
              </div>
            </div>

            <button className="subscribe-btn" onClick={handleSubscribe}>
              –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Premium
            </button>
          </div>
        )}
      </div>

      {/* –ü—Ä–æ—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <div className="settings__section">
        <h2>üîß –ü—Ä–æ—á–µ–µ</h2>

        <div className="settings-list">
          <button
            className="settings-item"
            onClick={() => onNavigate("assistant")}
          >
            <span className="settings-icon">ü§ñ</span>
            <div className="settings-text">
              <span className="settings-title">–ü–æ–º–æ—â–Ω–∏–∫</span>
              <span className="settings-desc">–ü–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –ø–æ –ø–∏—Ç–∞–Ω–∏—é</span>
            </div>
            <span className="settings-arrow">‚Ä∫</span>
          </button>

          <button
            className="settings-item"
            onClick={() => onNavigate("history")}
          >
            <span className="settings-icon">üìà</span>
            <div className="settings-text">
              <span className="settings-title">–ò—Å—Ç–æ—Ä–∏—è</span>
              <span className="settings-desc">–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏</span>
            </div>
            <span className="settings-arrow">‚Ä∫</span>
          </button>

          <div className="settings-item settings-item--danger">
            <span className="settings-icon">üóëÔ∏è</span>
            <div className="settings-text">
              <span className="settings-title">–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</span>
              <span className="settings-desc">
                –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
              </span>
            </div>
          </div>
        </div>
      </div>

      <div className="settings__danger-zone">
        <button
          className="reset-btn"
          onClick={() => {
            if (
              window.confirm(
                "–í—ã —É–≤–µ—Ä–µ–Ω—ã? –í—Å–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ."
              )
            ) {
              onReset();
            }
          }}
        >
          üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        </button>
      </div>

      <div className="settings__footer">
        <p>Cal AI v1.0.0</p>
        <p>–ê–Ω–∞–ª–æ–≥ –ø–æ–ø—É–ª—è—Ä–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞–ª–æ—Ä–∏–π</p>
      </div>
    </div>
  );
};

export default Settings;
